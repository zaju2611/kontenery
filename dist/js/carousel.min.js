function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,e){var t;if(r)return"string"==typeof r?_arrayLikeToArray(r,e):"Map"===(t="Object"===(t={}.toString.call(r).slice(8,-1))&&r.constructor?r.constructor.name:t)||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,a=Array(e);t<e;t++)a[t]=r[t];return a}var intervalId,buttons=document.querySelectorAll("[data-carousel-button]");function startCarousel(){intervalId=setInterval(function(){var r=document.querySelector("[data-carousel]").querySelector("[data-slides]"),e=r.querySelector("[data-active]"),t=_toConsumableArray(r.children).indexOf(e)+1;t>=r.children.length&&(t=0),r.children[t].dataset.active=!0,delete e.dataset.active},7e3)}startCarousel(),buttons.forEach(function(a){a.addEventListener("click",function(){clearInterval(intervalId),startCarousel();var r="next"===a.dataset.carouselButton?1:-1,e=a.closest("[data-carousel]").querySelector("[data-slides]"),t=e.querySelector("[data-active]"),r=_toConsumableArray(e.children).indexOf(t)+r;(r=r<0?e.children.length-1:r)>=e.children.length&&(r=0),e.children[r].dataset.active=!0,delete t.dataset.active})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcm91c2VsLmpzIl0sIm5hbWVzIjpbImludGVydmFsSWQiLCJidXR0b25zIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwic3RhcnRDYXJvdXNlbCIsInNldEludGVydmFsIiwic2xpZGVzIiwicXVlcnlTZWxlY3RvciIsImFjdGl2ZVNsaWRlIiwibmV3SW5kZXgiLCJjaGlsZHJlbiIsImluZGV4T2YiLCJsZW5ndGgiLCJjYXJvdXNlbCIsImRhdGFzZXQiLCJvZmZzZXQiLCJmb3JFYWNoIiwiYnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsZWFySW50ZXJ2YWwiLCJjYXJvdXNlbEJ1dHRvbiIsImNsb3Nlc3QiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJhY3RpdmUiXSwibWFwcGluZ3MiOiJzOEJBQUEsSUFDSUEsV0FERUMsUUFBVUMsU0FBU0MsaUJBQWlCLHdCQUF3QixFQUdsRSxTQUFTQyxnQkFDUkosV0FBYUssWUFBWSxXQUN4QixJQUNNQyxFQURXSixTQUFTSyxjQUFjLGlCQUFpQixFQUNqQ0EsY0FBYyxlQUFlLEVBQy9DQyxFQUFjRixFQUFPQyxjQUFjLGVBQWUsRUFKMURFLEVBQVNMLG1CQUFBQSxFQUFnQk0sUUFBQSxFQUFBQyxRQUFBSCxDQUFBLEVBSFROLEVBSWZGLEdBQWFLLEVBQUFBLFNBQVlPLFNBQU1ILEVBQUEsR0FTOUJILEVBUE1BLFNBQVNPLEdBQVNOLFFBQUFBLE9BQWMsQ0FBQSxFQVF0QyxPQVBNQyxFQUFXTSxRQUFVUCxNQVE1QixFQVBDLEdBQU1RLENBUVIsQ0FFQVgsY0FMU00sRUFPVFQsUUFMSWUsUUFBSyxTQUFBQyxHQUNUQSxFQUFBQyxpQkFBQSxRQUFBLFdBRUFkLGNBQWVKLFVBQUEsRUFFZkMsY0FBZ0IsRUFLZCxJQUhBa0IsRUFBeUIsU0FBWkYsRUFBQ2pCLFFBQVdvQixlQUFBLEVBQUEsQ0FBQSxFQUN6QmhCLEVBQWFhLEVBRWJJLFFBQU1OLGlCQUFnQkQsRUFDdEJQLGNBQWVVLGVBQ0wsRUFJTlIsRUFBV2EsRUFBQUEsY0FBSWhCLGVBQWlCSyxFQUNwQ0YsRUFBWWEsbUJBQUloQixFQUFFRyxRQUFXSCxFQUFBQSxRQUFPSSxDQUFlLEVBQUlLLEdBQ3ZDVCxFQUFoQkcsRUFBWSxFQUFXQyxFQUFTRSxTQUFRSCxPQUFZLEVBRXBESCxJQUFPSSxFQUFTRCxTQUFVSyxTQUFRUyxFQUFhLEdBRWhEakIsRUFBRUksU0FBQUQsR0FBQUssUUFBQVMsT0FBQSxDQUFBLEVBQ0QsT0FBQWYsRUFBQU0sUUFBQVMsTUFERCxDQUFDLENBQ0YsQ0FBQyIsImZpbGUiOiJjYXJvdXNlbC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBidXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWNhcm91c2VsLWJ1dHRvbl1cIik7XHJcbmxldCBpbnRlcnZhbElkO1xyXG5cclxuZnVuY3Rpb24gc3RhcnRDYXJvdXNlbCgpIHtcclxuXHRpbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG5cdFx0Y29uc3QgY2Fyb3VzZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtY2Fyb3VzZWxdXCIpO1xyXG5cdFx0Y29uc3Qgc2xpZGVzID0gY2Fyb3VzZWwucXVlcnlTZWxlY3RvcihcIltkYXRhLXNsaWRlc11cIik7XHJcblx0XHRjb25zdCBhY3RpdmVTbGlkZSA9IHNsaWRlcy5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtYWN0aXZlXVwiKTtcclxuXHRcdGNvbnN0IG9mZnNldCA9IDE7XHJcblxyXG5cdFx0bGV0IG5ld0luZGV4ID0gWy4uLnNsaWRlcy5jaGlsZHJlbl0uaW5kZXhPZihhY3RpdmVTbGlkZSkgKyBvZmZzZXQ7XHJcblx0XHRpZiAobmV3SW5kZXggPj0gc2xpZGVzLmNoaWxkcmVuLmxlbmd0aCkgbmV3SW5kZXggPSAwO1xyXG5cclxuXHRcdHNsaWRlcy5jaGlsZHJlbltuZXdJbmRleF0uZGF0YXNldC5hY3RpdmUgPSB0cnVlO1xyXG5cdFx0ZGVsZXRlIGFjdGl2ZVNsaWRlLmRhdGFzZXQuYWN0aXZlO1xyXG5cdH0sIDcwMDApO1xyXG59XHJcblxyXG5zdGFydENhcm91c2VsKCk7XHJcblxyXG5idXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xyXG5cdGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG5cdFx0Y2xlYXJJbnRlcnZhbChpbnRlcnZhbElkKTtcclxuXHRcdHN0YXJ0Q2Fyb3VzZWwoKTtcclxuXHJcblx0XHRjb25zdCBvZmZzZXQgPSBidXR0b24uZGF0YXNldC5jYXJvdXNlbEJ1dHRvbiA9PT0gXCJuZXh0XCIgPyAxIDogLTE7XHJcblx0XHRjb25zdCBzbGlkZXMgPSBidXR0b25cclxuXHRcdFx0LmNsb3Nlc3QoXCJbZGF0YS1jYXJvdXNlbF1cIilcclxuXHRcdFx0LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1zbGlkZXNdXCIpO1xyXG5cclxuXHRcdGNvbnN0IGFjdGl2ZVNsaWRlID0gc2xpZGVzLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1hY3RpdmVdXCIpO1xyXG5cdFx0bGV0IG5ld0luZGV4ID0gWy4uLnNsaWRlcy5jaGlsZHJlbl0uaW5kZXhPZihhY3RpdmVTbGlkZSkgKyBvZmZzZXQ7XHJcblx0XHRpZiAobmV3SW5kZXggPCAwKSBuZXdJbmRleCA9IHNsaWRlcy5jaGlsZHJlbi5sZW5ndGggLSAxO1xyXG5cdFx0aWYgKG5ld0luZGV4ID49IHNsaWRlcy5jaGlsZHJlbi5sZW5ndGgpIG5ld0luZGV4ID0gMDtcclxuXHJcblx0XHRzbGlkZXMuY2hpbGRyZW5bbmV3SW5kZXhdLmRhdGFzZXQuYWN0aXZlID0gdHJ1ZTtcclxuXHRcdGRlbGV0ZSBhY3RpdmVTbGlkZS5kYXRhc2V0LmFjdGl2ZTtcclxuXHR9KTtcclxufSk7XHJcbiJdfQ==
