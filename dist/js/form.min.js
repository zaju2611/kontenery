emailjs.init("gey-b1Y8gOJbQuPdL"),document.querySelector(".contact-form").addEventListener("submit",function(e){var r;e.preventDefault(),validateForm(e)&&(e=e.target,e=new FormData(e),r={},e.forEach(function(e,t){r[t]=e}),r.consent?emailjs.send("service_8bjzcai","template_2zxzxce",r).then(function(e){console.log("Sukces:",e),document.querySelector(".contact-form-container").innerHTML="\n                    <div class='info-box'>\n                        <h2>Wiadomość wysłana!</h2>\n                        <p>Skontaktujemy się z Tobą najszybciej jak to możliwe.</p>\n                        </div>\n                    "},function(e){console.log("Błąd:",e),alert("Coś poszło nie tak. Spróbuj ponownie.")}):alert("Musisz wyrazić zgodę na przetwarzanie danych!"))});var form=document.querySelector(".contact-form"),mainError=document.querySelector(".error-main"),errorMessages=document.querySelectorAll(".error");function resetErrors(){errorMessages.forEach(function(e){return e.style.opacity="0"}),mainError.style.opacity="0",form.querySelectorAll("input, textarea").forEach(function(e){e.classList.remove("error-border")}),document.querySelector("label[for='consent']").style.color=""}function validateForm(e){var t=!0,r=(resetErrors(),document.getElementById("name")),o=document.getElementById("email"),n=document.getElementById("message"),a=document.getElementById("consent"),r=(r.value.trim()||(r.nextElementSibling.style.opacity="1",r.classList.add("error-border"),t=!1),/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(o.value.trim())||(o.nextElementSibling.style.opacity="1",o.classList.add("error-border"),t=!1),n.value.trim()||(n.nextElementSibling.style.opacity="1",n.classList.add("error-border"),t=!1),document.querySelector("label[for='consent']"));return a.checked||(a.parentElement.nextElementSibling.style.opacity="1",t=!(r.style.color="red")),t||(mainError.style.opacity="1",e.preventDefault()),t}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm0uanMiXSwibmFtZXMiOlsiZW1haWxqcyIsImluaXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiZm9ybU9iamVjdCIsInZhbGlkYXRlRm9ybSIsIkZvcm1EYXRhIiwiZm9ybSIsInRhcmdldCIsImZvcm1EYXRhIiwiZm9yRWFjaCIsInZhbHVlIiwiY29uc2VudCIsImtleSIsImNvbnNvbGUiLCJsb2ciLCJ0aGVuIiwicmVzcG9uc2UiLCJtYWluRXJyb3IiLCJpbm5lckhUTUwiLCJmaWVsZCIsImNsYXNzTGlzdCIsImVycm9yIiwiYWxlcnQiLCJjb25zZW50TGFiZWwiLCJuYW1lRmllbGQiLCJnZXRFbGVtZW50QnlJZCIsImVtYWlsRmllbGQiLCJtZXNzYWdlRmllbGQiLCJlcnJvck1lc3NhZ2VzIiwibmV4dEVsZW1lbnRTaWJsaW5nIiwic3R5bGUiLCJvcGFjaXR5IiwiaXNWYWxpZCIsInJlbW92ZSIsInJlc2V0RXJyb3JzIiwiY29uc2VudEZpZWxkIiwiY2hlY2tlZCIsInBhcmVudEVsZW1lbnQiLCJ0cmltIiwiYWRkIiwidGVzdCIsImNvbG9yIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUUMsS0FBSyxtQkFBbUIsRUFBaENELFNBRUFFLGNBQ0VDLGVBQWMsRUFFZEMsaUJBQU1DLFNBQWdCLFNBQUFELEdBRXRCLElBT0dFLEVBUEhGLEVBQUlHLGVBQWFILEVBRWhCRyxhQUFlSCxDQUFJSSxJQUVuQkMsRUFBSUgsRUFBVUksT0FDZEMsRUFBU0MsSUFBUUosU0FBVUssQ0FBQUEsRUFFekJQLEVBQUEsR0FGRkssRUFJS0wsUUFBV1EsU0FBU0QsRUFBQUUsR0FIeEJULEVBSU1TLEdBQUFGLENBSFAsQ0FBQyxFQU9EYixFQUFhYyxRQUFiZCxRQWVFZ0IsS0FBUUMsa0JBQW1CLG1CQUFBWCxDQUFBLEVBQUFZLEtBZDVCLFNBZU9DLEdBRVJILFFBQUNDLElBQUEsVUFBQUUsQ0FBQSxFQUVEakIsU0FBQUMsY0FFR00seUJBQ0FXLEVBQ2FDLFVBQVcsOE9BSzdCWixFQUNDYSxTQUFNQyxHQUNMUCxRQUFBQyxJQUFBLFFBQUFPLENBQUEsRUFFRkMsTUFBTUMsdUNBQXNDLENBQzVDQSxDQUNELEVBdkNJRCxNQU1DVCwrQ0FBZ0MsRUFrQnBDLENBa0JBLEVBaEJELElBbUJPVyxLQUFBQSxTQUFZekIsY0FBUzBCLGVBQXNCLEVBQzNDQyxVQUFVM0IsU0FBV0MsY0FBQ3lCLGFBQXVCLEVBQzdDRSxjQUFlNUIsU0FBUzBCLGlCQUFlLFFBQVUsRUFqQnhELFNBb0JNRCxjQW5CTEksY0FvQldDLFFBQUFBLFNBQUFBLEdBQUFBLE9BQW1CQyxFQUFNQyxNQUFPQSxRQUFNLEdBQUEsQ0FBQSxFQW5CakRkLFVBb0JDTyxNQUFVSixRQUFhLElBbkJ4QmQsS0FvQkMwQixpQkFBZSxpQkFBQSxFQUFBdkIsUUFBQSxTQUFBVSxHQUNoQkEsRUFBQUMsVUFBQWEsT0FBQSxjQUFBLENBbkJBLENBcUJBLEVBRVlKLFNBQUFBLGNBQXlCRSxzQkFBYSxFQUN2Q0QsTUFBQ1YsTUFBYSxFQXBCMUIsQ0FFQSxTQXNCTU8sYUFBYWpCLEdBckJsQixJQXNCQ2lCLEVBQUFBLENBQUFBLEVBR0RILEdBeEJBVSxZQXNCQ1AsRUFFRDVCLFNBQUEwQixlQUFBLE1BQUEsR0FFTUYsRUFBWXhCLFNBQVcwQixlQUFlLE9BQUEsRUFDdkNVLEVBQWFDLFNBQVNYLGVBQUEsU0FBQSxFQUMxQlUsRUFBYUUsU0FBY1IsZUFBQUEsU0FBd0IsRUFGOUNOLEdBSUxTLEVBQVV0QixNQUFLNEIsS0FBQSxJQUNoQmQsRUFBQUssbUJBQUFDLE1BQUFDLFFBQUEsSUFFQVAsRUFBS1EsVUFBU08sSUFBQSxjQUFBLEVBdkJiUCxFQXdCQWYsQ0FBQUEsR0FJYSw2QkFDZnVCLEtBQUFkLEVBQUFoQixNQUFBNEIsS0FBQSxDQUFBLElBeEJFWixFQUFXRyxtQkFBbUJDLE1BQU1DLFFBQVUsSUFDOUNMLEVBQVdOLFVBQVVtQixJQUFJLGNBQWMsRUFDdkNQLEVBQVUsQ0FBQSxHQUdOTCxFQUFhakIsTUFBTTRCLEtBQUssSUFDNUJYLEVBQWFFLG1CQUFtQkMsTUFBTUMsUUFBVSxJQUNoREosRUFBYVAsVUFBVW1CLElBQUksY0FBYyxFQUN6Q1AsRUFBVSxDQUFBLEdBR1VqQyxTQUFTQyxjQUFjLHNCQUFzQixHQVlsRSxPQVhLbUMsRUFBYUMsVUFDakJELEVBQWFFLGNBQWNSLG1CQUFtQkMsTUFBTUMsUUFBVSxJQUU5REMsRUFBVSxFQURWVCxFQUFhTyxNQUFNVyxNQUFRLFFBSXZCVCxJQUNKZixVQUFVYSxNQUFNQyxRQUFVLElBQzFCOUIsRUFBTUMsZUFBZSxHQUdmOEIsQ0FDUiIsImZpbGUiOiJmb3JtLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImVtYWlsanMuaW5pdChcImdleS1iMVk4Z09KYlF1UGRMXCIpO1xyXG5cclxuZG9jdW1lbnRcclxuXHQucXVlcnlTZWxlY3RvcihcIi5jb250YWN0LWZvcm1cIilcclxuXHQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdFx0aWYgKHZhbGlkYXRlRm9ybShldmVudCkpIHtcclxuXHRcdFx0bGV0IGZvcm0gPSBldmVudC50YXJnZXQ7XHJcblx0XHRcdGxldCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShmb3JtKTtcclxuXHJcblx0XHRcdGxldCBmb3JtT2JqZWN0ID0ge307XHJcblx0XHRcdGZvcm1EYXRhLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcclxuXHRcdFx0XHRmb3JtT2JqZWN0W2tleV0gPSB2YWx1ZTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHRpZiAoIWZvcm1PYmplY3QuY29uc2VudCkge1xyXG5cdFx0XHRcdGFsZXJ0KFwiTXVzaXN6IHd5cmF6acSHIHpnb2TEmSBuYSBwcnpldHdhcnphbmllIGRhbnljaCFcIik7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRlbWFpbGpzLnNlbmQoXCJzZXJ2aWNlXzhianpjYWlcIiwgXCJ0ZW1wbGF0ZV8yenh6eGNlXCIsIGZvcm1PYmplY3QpLnRoZW4oXHJcblx0XHRcdFx0ZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIlN1a2NlczpcIiwgcmVzcG9uc2UpO1xyXG5cclxuXHRcdFx0XHRcdGNvbnN0IGZvcm1Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG5cdFx0XHRcdFx0XHRcIi5jb250YWN0LWZvcm0tY29udGFpbmVyXCJcclxuXHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHRmb3JtQ29udGFpbmVyLmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdpbmZvLWJveCc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMj5XaWFkb21vxZvEhyB3eXPFgmFuYSE8L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cD5Ta29udGFrdHVqZW15IHNpxJkgeiBUb2LEhSBuYWpzenliY2llaiBqYWsgdG8gbW/FvGxpd2UuPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICBgO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0ZnVuY3Rpb24gKGVycm9yKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIkLFgsSFZDpcIiwgZXJyb3IpO1xyXG5cdFx0XHRcdFx0YWxlcnQoXCJDb8WbIHBvc3rFgm8gbmllIHRhay4gU3Byw7NidWogcG9ub3duaWUuXCIpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcbmNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNvbnRhY3QtZm9ybVwiKTtcclxuY29uc3QgbWFpbkVycm9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lcnJvci1tYWluXCIpO1xyXG5jb25zdCBlcnJvck1lc3NhZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5lcnJvclwiKTtcclxuXHJcbmZ1bmN0aW9uIHJlc2V0RXJyb3JzKCkge1xyXG5cdGVycm9yTWVzc2FnZXMuZm9yRWFjaCgoZXJyb3IpID0+IChlcnJvci5zdHlsZS5vcGFjaXR5ID0gXCIwXCIpKTtcclxuXHRtYWluRXJyb3Iuc3R5bGUub3BhY2l0eSA9IFwiMFwiO1xyXG5cdGZvcm0ucXVlcnlTZWxlY3RvckFsbChcImlucHV0LCB0ZXh0YXJlYVwiKS5mb3JFYWNoKChmaWVsZCkgPT4ge1xyXG5cdFx0ZmllbGQuY2xhc3NMaXN0LnJlbW92ZShcImVycm9yLWJvcmRlclwiKTtcclxuXHR9KTtcclxuXHJcblx0Y29uc3QgY29uc2VudExhYmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImxhYmVsW2Zvcj0nY29uc2VudCddXCIpO1xyXG5cdGNvbnNlbnRMYWJlbC5zdHlsZS5jb2xvciA9IFwiXCI7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHZhbGlkYXRlRm9ybShldmVudCkge1xyXG5cdGxldCBpc1ZhbGlkID0gdHJ1ZTtcclxuXHRyZXNldEVycm9ycygpO1xyXG5cclxuXHRjb25zdCBuYW1lRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5hbWVcIik7XHJcblx0Y29uc3QgZW1haWxGaWVsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZW1haWxcIik7XHJcblx0Y29uc3QgbWVzc2FnZUZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZXNzYWdlXCIpO1xyXG5cdGNvbnN0IGNvbnNlbnRGaWVsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29uc2VudFwiKTtcclxuXHJcblx0aWYgKCFuYW1lRmllbGQudmFsdWUudHJpbSgpKSB7XHJcblx0XHRuYW1lRmllbGQubmV4dEVsZW1lbnRTaWJsaW5nLnN0eWxlLm9wYWNpdHkgPSBcIjFcIjtcclxuXHRcdG5hbWVGaWVsZC5jbGFzc0xpc3QuYWRkKFwiZXJyb3ItYm9yZGVyXCIpO1xyXG5cdFx0aXNWYWxpZCA9IGZhbHNlO1xyXG5cdH1cclxuXHJcblx0Y29uc3QgZW1haWxSZWdleCA9IC9eW15cXHNAXStAW15cXHNAXStcXC5bXlxcc0BdKyQvO1xyXG5cdGlmICghZW1haWxSZWdleC50ZXN0KGVtYWlsRmllbGQudmFsdWUudHJpbSgpKSkge1xyXG5cdFx0ZW1haWxGaWVsZC5uZXh0RWxlbWVudFNpYmxpbmcuc3R5bGUub3BhY2l0eSA9IFwiMVwiO1xyXG5cdFx0ZW1haWxGaWVsZC5jbGFzc0xpc3QuYWRkKFwiZXJyb3ItYm9yZGVyXCIpO1xyXG5cdFx0aXNWYWxpZCA9IGZhbHNlO1xyXG5cdH1cclxuXHJcblx0aWYgKCFtZXNzYWdlRmllbGQudmFsdWUudHJpbSgpKSB7XHJcblx0XHRtZXNzYWdlRmllbGQubmV4dEVsZW1lbnRTaWJsaW5nLnN0eWxlLm9wYWNpdHkgPSBcIjFcIjtcclxuXHRcdG1lc3NhZ2VGaWVsZC5jbGFzc0xpc3QuYWRkKFwiZXJyb3ItYm9yZGVyXCIpO1xyXG5cdFx0aXNWYWxpZCA9IGZhbHNlO1xyXG5cdH1cclxuXHJcblx0Y29uc3QgY29uc2VudExhYmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImxhYmVsW2Zvcj0nY29uc2VudCddXCIpO1xyXG5cdGlmICghY29uc2VudEZpZWxkLmNoZWNrZWQpIHtcclxuXHRcdGNvbnNlbnRGaWVsZC5wYXJlbnRFbGVtZW50Lm5leHRFbGVtZW50U2libGluZy5zdHlsZS5vcGFjaXR5ID0gXCIxXCI7XHJcblx0XHRjb25zZW50TGFiZWwuc3R5bGUuY29sb3IgPSBcInJlZFwiO1xyXG5cdFx0aXNWYWxpZCA9IGZhbHNlO1xyXG5cdH1cclxuXHJcblx0aWYgKCFpc1ZhbGlkKSB7XHJcblx0XHRtYWluRXJyb3Iuc3R5bGUub3BhY2l0eSA9IFwiMVwiO1xyXG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBpc1ZhbGlkO1xyXG59XHJcbiJdfQ==
